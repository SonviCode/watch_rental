version: "3"

services:
  backend:
    build:
      context: ./backend
      target: build
    container_name: backend
    working_dir: /app
    networks:
      - node-network
    volumes:
      - backend_data:/app
      - /app/node_modules
    tty: true
    ports:
      - "3333:3333"
    environment:
      NODE_ENV: development
      HOST: 0.0.0.0
      DB_HOST: db
      DB_USER: root
      DB_PASSWORD: root
      DB_DATABASE: tempo
    command: sh -c "node ace migration:run --force && node ace serve --watch"
    depends_on:
      db:
        condition: service_healthy

  frontend:
    build:
      context: ./frontend
    container_name: frontend
    working_dir: /usr/src/app
    networks:
      - node-network
    volumes:
      - frontend_data:/usr/src/app
      - /usr/src/app/node_modules
    ports:
      - "5173:5173"
    command: npm run dev

  db:
    image: mysql
    container_name: db
    restart: always
    volumes:
      - mysqldb_data:/var/lib/mysql
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    environment:
      MYSQL_ROOT_PASSWORD: root
    ports:
      - "3306:3306"
    networks:
      - node-network
    healthcheck:
      test: "exit 0"

  phpmyadmin:
    image: phpmyadmin:latest
    container_name: phpmyadmin
    restart: always
    ports:
      - "8888:80"
    environment:
      PMA_HOST: db  
    volumes:
      - phpmyadmin_data:/var/www/html/
    networks:
      - node-network

  nginx:
    image: nginx:latest
    container_name: nginx
    restart: always
    ports:
      - "8000:80"
    networks:
      - node-network
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/conf.d/nginx.conf
    depends_on:
      - backend
      - frontend

networks:
  node-network:
    driver: bridge

volumes:
  mysqldb_data:
  phpmyadmin_data:
  backend_data:
  frontend_data:
